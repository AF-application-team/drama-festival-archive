//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AF_Desktop_Application_WCF.AFServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AFServiceReference.IAFService")]
    public interface IAFService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/AddAward", ReplyAction="http://tempuri.org/IAFService/AddAwardResponse")]
        AF.Common.Requests.SingleItemResponse<AF.Common.DTO.AwardDataDTO> AddAward(AF.Common.DTO.AwardDataDTO newAward);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/AddAward", ReplyAction="http://tempuri.org/IAFService/AddAwardResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.AwardDataDTO>> AddAwardAsync(AF.Common.DTO.AwardDataDTO newAward);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/UpdateAward", ReplyAction="http://tempuri.org/IAFService/UpdateAwardResponse")]
        AF.Common.Requests.SingleItemResponse<AF.Common.DTO.AwardDataDTO> UpdateAward(AF.Common.DTO.AwardDataDTO updateData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/UpdateAward", ReplyAction="http://tempuri.org/IAFService/UpdateAwardResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.AwardDataDTO>> UpdateAwardAsync(AF.Common.DTO.AwardDataDTO updateData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/GetAward", ReplyAction="http://tempuri.org/IAFService/GetAwardResponse")]
        AF.Common.Requests.SingleItemResponse<AF.Common.DTO.AwardDataDTO> GetAward(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/GetAward", ReplyAction="http://tempuri.org/IAFService/GetAwardResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.AwardDataDTO>> GetAwardAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/SearchAwards", ReplyAction="http://tempuri.org/IAFService/SearchAwardsResponse")]
        AF.Common.Requests.ListResponse<AF.Common.DTO.AwardMixedDTO> SearchAwards(AF.Common.Queries.AwardsSearchingCriteria criteria, int pageNr, int pageAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/SearchAwards", ReplyAction="http://tempuri.org/IAFService/SearchAwardsResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.ListResponse<AF.Common.DTO.AwardMixedDTO>> SearchAwardsAsync(AF.Common.Queries.AwardsSearchingCriteria criteria, int pageNr, int pageAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/AddCategory", ReplyAction="http://tempuri.org/IAFService/AddCategoryResponse")]
        AF.Common.Requests.SingleItemResponse<AF.Common.DTO.CategoryDTO> AddCategory(AF.Common.DTO.CategoryDTO newCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/AddCategory", ReplyAction="http://tempuri.org/IAFService/AddCategoryResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.CategoryDTO>> AddCategoryAsync(AF.Common.DTO.CategoryDTO newCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/UpdateCategory", ReplyAction="http://tempuri.org/IAFService/UpdateCategoryResponse")]
        AF.Common.Requests.SingleItemResponse<AF.Common.DTO.CategoryDTO> UpdateCategory(AF.Common.DTO.CategoryDTO updateData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/UpdateCategory", ReplyAction="http://tempuri.org/IAFService/UpdateCategoryResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.CategoryDTO>> UpdateCategoryAsync(AF.Common.DTO.CategoryDTO updateData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/GetCategory", ReplyAction="http://tempuri.org/IAFService/GetCategoryResponse")]
        AF.Common.Requests.SingleItemResponse<AF.Common.DTO.CategoryDTO> GetCategory(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/GetCategory", ReplyAction="http://tempuri.org/IAFService/GetCategoryResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.CategoryDTO>> GetCategoryAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/GetAllCategories", ReplyAction="http://tempuri.org/IAFService/GetAllCategoriesResponse")]
        AF.Common.Requests.ListResponse<AF.Common.DTO.CategoryDTO> GetAllCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/GetAllCategories", ReplyAction="http://tempuri.org/IAFService/GetAllCategoriesResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.ListResponse<AF.Common.DTO.CategoryDTO>> GetAllCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/AddFestival", ReplyAction="http://tempuri.org/IAFService/AddFestivalResponse")]
        AF.Common.Requests.SingleItemResponse<AF.Common.DTO.FestivalDTO> AddFestival(AF.Common.DTO.FestivalDTO newFestival);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/AddFestival", ReplyAction="http://tempuri.org/IAFService/AddFestivalResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.FestivalDTO>> AddFestivalAsync(AF.Common.DTO.FestivalDTO newFestival);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/UpdateFestival", ReplyAction="http://tempuri.org/IAFService/UpdateFestivalResponse")]
        AF.Common.Requests.SingleItemResponse<AF.Common.DTO.FestivalDTO> UpdateFestival(AF.Common.DTO.FestivalDTO updateData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/UpdateFestival", ReplyAction="http://tempuri.org/IAFService/UpdateFestivalResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.FestivalDTO>> UpdateFestivalAsync(AF.Common.DTO.FestivalDTO updateData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/GetFestival", ReplyAction="http://tempuri.org/IAFService/GetFestivalResponse")]
        AF.Common.Requests.SingleItemResponse<AF.Common.DTO.FestivalDTO> GetFestival(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/GetFestival", ReplyAction="http://tempuri.org/IAFService/GetFestivalResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.FestivalDTO>> GetFestivalAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/GetFestivalsPaged", ReplyAction="http://tempuri.org/IAFService/GetFestivalsPagedResponse")]
        AF.Common.Requests.ListResponse<AF.Common.DTO.FestivalDTO> GetFestivalsPaged(int pageNr, int pageAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/GetFestivalsPaged", ReplyAction="http://tempuri.org/IAFService/GetFestivalsPagedResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.ListResponse<AF.Common.DTO.FestivalDTO>> GetFestivalsPagedAsync(int pageNr, int pageAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/CountFestivals", ReplyAction="http://tempuri.org/IAFService/CountFestivalsResponse")]
        AF.Common.Requests.SingleItemResponse<int> CountFestivals();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/CountFestivals", ReplyAction="http://tempuri.org/IAFService/CountFestivalsResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<int>> CountFestivalsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/AddJob", ReplyAction="http://tempuri.org/IAFService/AddJobResponse")]
        AF.Common.Requests.SingleItemResponse<AF.Common.DTO.JobDTO> AddJob(AF.Common.DTO.JobDTO newJob);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/AddJob", ReplyAction="http://tempuri.org/IAFService/AddJobResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.JobDTO>> AddJobAsync(AF.Common.DTO.JobDTO newJob);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/UpdateJob", ReplyAction="http://tempuri.org/IAFService/UpdateJobResponse")]
        AF.Common.Requests.SingleItemResponse<AF.Common.DTO.JobDTO> UpdateJob(AF.Common.DTO.JobDTO updateData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/UpdateJob", ReplyAction="http://tempuri.org/IAFService/UpdateJobResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.JobDTO>> UpdateJobAsync(AF.Common.DTO.JobDTO updateData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/GetJob", ReplyAction="http://tempuri.org/IAFService/GetJobResponse")]
        AF.Common.Requests.SingleItemResponse<AF.Common.DTO.JobDTO> GetJob(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/GetJob", ReplyAction="http://tempuri.org/IAFService/GetJobResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.JobDTO>> GetJobAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/GetAllJobs", ReplyAction="http://tempuri.org/IAFService/GetAllJobsResponse")]
        AF.Common.Requests.ListResponse<AF.Common.DTO.JobDTO> GetAllJobs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/GetAllJobs", ReplyAction="http://tempuri.org/IAFService/GetAllJobsResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.ListResponse<AF.Common.DTO.JobDTO>> GetAllJobsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/AddPlay", ReplyAction="http://tempuri.org/IAFService/AddPlayResponse")]
        AF.Common.Requests.SingleItemResponse<AF.Common.DTO.PlayDataDTO> AddPlay(AF.Common.DTO.PlayDataDTO newPlay);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/AddPlay", ReplyAction="http://tempuri.org/IAFService/AddPlayResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.PlayDataDTO>> AddPlayAsync(AF.Common.DTO.PlayDataDTO newPlay);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/UpdatePlay", ReplyAction="http://tempuri.org/IAFService/UpdatePlayResponse")]
        AF.Common.Requests.SingleItemResponse<AF.Common.DTO.PlayDataDTO> UpdatePlay(AF.Common.DTO.PlayDataDTO updateData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/UpdatePlay", ReplyAction="http://tempuri.org/IAFService/UpdatePlayResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.PlayDataDTO>> UpdatePlayAsync(AF.Common.DTO.PlayDataDTO updateData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/GetPlay", ReplyAction="http://tempuri.org/IAFService/GetPlayResponse")]
        AF.Common.Requests.SingleItemResponse<AF.Common.DTO.PlayDataDTO> GetPlay(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/GetPlay", ReplyAction="http://tempuri.org/IAFService/GetPlayResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.PlayDataDTO>> GetPlayAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/SearchPlays", ReplyAction="http://tempuri.org/IAFService/SearchPlaysResponse")]
        AF.Common.Requests.ListResponse<AF.Common.DTO.PlayDataDTO> SearchPlays(AF.Common.Queries.PlaysSearchingCriteria criteria, int pageNr, int pageAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/SearchPlays", ReplyAction="http://tempuri.org/IAFService/SearchPlaysResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.ListResponse<AF.Common.DTO.PlayDataDTO>> SearchPlaysAsync(AF.Common.Queries.PlaysSearchingCriteria criteria, int pageNr, int pageAmount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/AddPosition", ReplyAction="http://tempuri.org/IAFService/AddPositionResponse")]
        AF.Common.Requests.SingleItemResponse<AF.Common.DTO.PositionDTO> AddPosition(AF.Common.DTO.PositionDTO newPosition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/AddPosition", ReplyAction="http://tempuri.org/IAFService/AddPositionResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.PositionDTO>> AddPositionAsync(AF.Common.DTO.PositionDTO newPosition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/UpdatePosition", ReplyAction="http://tempuri.org/IAFService/UpdatePositionResponse")]
        AF.Common.Requests.SingleItemResponse<AF.Common.DTO.PositionDTO> UpdatePosition(AF.Common.DTO.PositionDTO updateData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/UpdatePosition", ReplyAction="http://tempuri.org/IAFService/UpdatePositionResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.PositionDTO>> UpdatePositionAsync(AF.Common.DTO.PositionDTO updateData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/GetPosition", ReplyAction="http://tempuri.org/IAFService/GetPositionResponse")]
        AF.Common.Requests.SingleItemResponse<AF.Common.DTO.PositionDTO> GetPosition(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/GetPosition", ReplyAction="http://tempuri.org/IAFService/GetPositionResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.PositionDTO>> GetPositionAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/GetAllPositions", ReplyAction="http://tempuri.org/IAFService/GetAllPositionsResponse")]
        AF.Common.Requests.ListResponse<AF.Common.DTO.PositionDTO> GetAllPositions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/GetAllPositions", ReplyAction="http://tempuri.org/IAFService/GetAllPositionsResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.ListResponse<AF.Common.DTO.PositionDTO>> GetAllPositionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/AddRelationFestivalPersonPosition", ReplyAction="http://tempuri.org/IAFService/AddRelationFestivalPersonPositionResponse")]
        AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationFestivalPersonPositionDTO> AddRelationFestivalPersonPosition(AF.Common.DTO.RelationFestivalPersonPositionDTO newRelationFestivalPersonPosition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/AddRelationFestivalPersonPosition", ReplyAction="http://tempuri.org/IAFService/AddRelationFestivalPersonPositionResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationFestivalPersonPositionDTO>> AddRelationFestivalPersonPositionAsync(AF.Common.DTO.RelationFestivalPersonPositionDTO newRelationFestivalPersonPosition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/RemoveRelationFestivalPersonPosition", ReplyAction="http://tempuri.org/IAFService/RemoveRelationFestivalPersonPositionResponse")]
        AF.Common.Requests.SingleItemResponse<bool> RemoveRelationFestivalPersonPosition(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/RemoveRelationFestivalPersonPosition", ReplyAction="http://tempuri.org/IAFService/RemoveRelationFestivalPersonPositionResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<bool>> RemoveRelationFestivalPersonPositionAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/UpdateRelationFestivalPersonPosition", ReplyAction="http://tempuri.org/IAFService/UpdateRelationFestivalPersonPositionResponse")]
        AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationFestivalPersonPositionDTO> UpdateRelationFestivalPersonPosition(AF.Common.DTO.RelationFestivalPersonPositionDTO updateData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/UpdateRelationFestivalPersonPosition", ReplyAction="http://tempuri.org/IAFService/UpdateRelationFestivalPersonPositionResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationFestivalPersonPositionDTO>> UpdateRelationFestivalPersonPositionAsync(AF.Common.DTO.RelationFestivalPersonPositionDTO updateData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/GetRelationFestivalPersonPosition", ReplyAction="http://tempuri.org/IAFService/GetRelationFestivalPersonPositionResponse")]
        AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationFestivalPersonPositionDTO> GetRelationFestivalPersonPosition(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/GetRelationFestivalPersonPosition", ReplyAction="http://tempuri.org/IAFService/GetRelationFestivalPersonPositionResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationFestivalPersonPositionDTO>> GetRelationFestivalPersonPositionAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/AddRelationPersonAward", ReplyAction="http://tempuri.org/IAFService/AddRelationPersonAwardResponse")]
        AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonAwardDTO> AddRelationPersonAward(AF.Common.DTO.RelationPersonAwardDTO newRelationPersonAward);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/AddRelationPersonAward", ReplyAction="http://tempuri.org/IAFService/AddRelationPersonAwardResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonAwardDTO>> AddRelationPersonAwardAsync(AF.Common.DTO.RelationPersonAwardDTO newRelationPersonAward);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/RemoveRelationPersonAward", ReplyAction="http://tempuri.org/IAFService/RemoveRelationPersonAwardResponse")]
        AF.Common.Requests.SingleItemResponse<bool> RemoveRelationPersonAward(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/RemoveRelationPersonAward", ReplyAction="http://tempuri.org/IAFService/RemoveRelationPersonAwardResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<bool>> RemoveRelationPersonAwardAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/UpdateRelationPersonAward", ReplyAction="http://tempuri.org/IAFService/UpdateRelationPersonAwardResponse")]
        AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonAwardDTO> UpdateRelationPersonAward(AF.Common.DTO.RelationPersonAwardDTO updateData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/UpdateRelationPersonAward", ReplyAction="http://tempuri.org/IAFService/UpdateRelationPersonAwardResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonAwardDTO>> UpdateRelationPersonAwardAsync(AF.Common.DTO.RelationPersonAwardDTO updateData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/GetRelationPersonAward", ReplyAction="http://tempuri.org/IAFService/GetRelationPersonAwardResponse")]
        AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonAwardDTO> GetRelationPersonAward(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/GetRelationPersonAward", ReplyAction="http://tempuri.org/IAFService/GetRelationPersonAwardResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonAwardDTO>> GetRelationPersonAwardAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/AddRelationPersonPlayJob", ReplyAction="http://tempuri.org/IAFService/AddRelationPersonPlayJobResponse")]
        AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonPlayJobDTO> AddRelationPersonPlayJob(AF.Common.DTO.RelationPersonPlayJobDTO newRelationPersonPlayJob);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/AddRelationPersonPlayJob", ReplyAction="http://tempuri.org/IAFService/AddRelationPersonPlayJobResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonPlayJobDTO>> AddRelationPersonPlayJobAsync(AF.Common.DTO.RelationPersonPlayJobDTO newRelationPersonPlayJob);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/RemoveRelationPersonPlayJob", ReplyAction="http://tempuri.org/IAFService/RemoveRelationPersonPlayJobResponse")]
        AF.Common.Requests.SingleItemResponse<bool> RemoveRelationPersonPlayJob(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/RemoveRelationPersonPlayJob", ReplyAction="http://tempuri.org/IAFService/RemoveRelationPersonPlayJobResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<bool>> RemoveRelationPersonPlayJobAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/UpdateRelationPersonPlayJob", ReplyAction="http://tempuri.org/IAFService/UpdateRelationPersonPlayJobResponse")]
        AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonPlayJobDTO> UpdateRelationPersonPlayJob(AF.Common.DTO.RelationPersonPlayJobDTO updateData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/UpdateRelationPersonPlayJob", ReplyAction="http://tempuri.org/IAFService/UpdateRelationPersonPlayJobResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonPlayJobDTO>> UpdateRelationPersonPlayJobAsync(AF.Common.DTO.RelationPersonPlayJobDTO updateData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/GetRelationPersonPlayJob", ReplyAction="http://tempuri.org/IAFService/GetRelationPersonPlayJobResponse")]
        AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonPlayJobDTO> GetRelationPersonPlayJob(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/GetRelationPersonPlayJob", ReplyAction="http://tempuri.org/IAFService/GetRelationPersonPlayJobResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonPlayJobDTO>> GetRelationPersonPlayJobAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/AddRelationPersonPlayRole", ReplyAction="http://tempuri.org/IAFService/AddRelationPersonPlayRoleResponse")]
        AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonPlayRoleDTO> AddRelationPersonPlayRole(AF.Common.DTO.RelationPersonPlayRoleDTO newRelationPersonPlayRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/AddRelationPersonPlayRole", ReplyAction="http://tempuri.org/IAFService/AddRelationPersonPlayRoleResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonPlayRoleDTO>> AddRelationPersonPlayRoleAsync(AF.Common.DTO.RelationPersonPlayRoleDTO newRelationPersonPlayRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/RemoveRelationPersonPlayRole", ReplyAction="http://tempuri.org/IAFService/RemoveRelationPersonPlayRoleResponse")]
        AF.Common.Requests.SingleItemResponse<bool> RemoveRelationPersonPlayRole(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/RemoveRelationPersonPlayRole", ReplyAction="http://tempuri.org/IAFService/RemoveRelationPersonPlayRoleResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<bool>> RemoveRelationPersonPlayRoleAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/UpdateRelationPersonPlayRole", ReplyAction="http://tempuri.org/IAFService/UpdateRelationPersonPlayRoleResponse")]
        AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonPlayRoleDTO> UpdateRelationPersonPlayRole(AF.Common.DTO.RelationPersonPlayRoleDTO updateData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/UpdateRelationPersonPlayRole", ReplyAction="http://tempuri.org/IAFService/UpdateRelationPersonPlayRoleResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonPlayRoleDTO>> UpdateRelationPersonPlayRoleAsync(AF.Common.DTO.RelationPersonPlayRoleDTO updateData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/GetRelationPersonPlayRole", ReplyAction="http://tempuri.org/IAFService/GetRelationPersonPlayRoleResponse")]
        AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonPlayRoleDTO> GetRelationPersonPlayRole(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/GetRelationPersonPlayRole", ReplyAction="http://tempuri.org/IAFService/GetRelationPersonPlayRoleResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonPlayRoleDTO>> GetRelationPersonPlayRoleAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/GetUser", ReplyAction="http://tempuri.org/IAFService/GetUserResponse")]
        AF.Common.Requests.SingleItemResponse<AF.Common.DTO.UserDTO> GetUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/GetUser", ReplyAction="http://tempuri.org/IAFService/GetUserResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.UserDTO>> GetUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/GetAllUsers", ReplyAction="http://tempuri.org/IAFService/GetAllUsersResponse")]
        AF.Common.Requests.ListResponse<AF.Common.DTO.UserDTO> GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAFService/GetAllUsers", ReplyAction="http://tempuri.org/IAFService/GetAllUsersResponse")]
        System.Threading.Tasks.Task<AF.Common.Requests.ListResponse<AF.Common.DTO.UserDTO>> GetAllUsersAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAFServiceChannel : AF_Desktop_Application_WCF.AFServiceReference.IAFService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AFServiceClient : System.ServiceModel.ClientBase<AF_Desktop_Application_WCF.AFServiceReference.IAFService>, AF_Desktop_Application_WCF.AFServiceReference.IAFService {
        
        public AFServiceClient() {
        }
        
        public AFServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AFServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AFServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AFServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AF.Common.Requests.SingleItemResponse<AF.Common.DTO.AwardDataDTO> AddAward(AF.Common.DTO.AwardDataDTO newAward) {
            return base.Channel.AddAward(newAward);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.AwardDataDTO>> AddAwardAsync(AF.Common.DTO.AwardDataDTO newAward) {
            return base.Channel.AddAwardAsync(newAward);
        }
        
        public AF.Common.Requests.SingleItemResponse<AF.Common.DTO.AwardDataDTO> UpdateAward(AF.Common.DTO.AwardDataDTO updateData) {
            return base.Channel.UpdateAward(updateData);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.AwardDataDTO>> UpdateAwardAsync(AF.Common.DTO.AwardDataDTO updateData) {
            return base.Channel.UpdateAwardAsync(updateData);
        }
        
        public AF.Common.Requests.SingleItemResponse<AF.Common.DTO.AwardDataDTO> GetAward(int id) {
            return base.Channel.GetAward(id);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.AwardDataDTO>> GetAwardAsync(int id) {
            return base.Channel.GetAwardAsync(id);
        }
        
        public AF.Common.Requests.ListResponse<AF.Common.DTO.AwardMixedDTO> SearchAwards(AF.Common.Queries.AwardsSearchingCriteria criteria, int pageNr, int pageAmount) {
            return base.Channel.SearchAwards(criteria, pageNr, pageAmount);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.ListResponse<AF.Common.DTO.AwardMixedDTO>> SearchAwardsAsync(AF.Common.Queries.AwardsSearchingCriteria criteria, int pageNr, int pageAmount) {
            return base.Channel.SearchAwardsAsync(criteria, pageNr, pageAmount);
        }
        
        public AF.Common.Requests.SingleItemResponse<AF.Common.DTO.CategoryDTO> AddCategory(AF.Common.DTO.CategoryDTO newCategory) {
            return base.Channel.AddCategory(newCategory);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.CategoryDTO>> AddCategoryAsync(AF.Common.DTO.CategoryDTO newCategory) {
            return base.Channel.AddCategoryAsync(newCategory);
        }
        
        public AF.Common.Requests.SingleItemResponse<AF.Common.DTO.CategoryDTO> UpdateCategory(AF.Common.DTO.CategoryDTO updateData) {
            return base.Channel.UpdateCategory(updateData);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.CategoryDTO>> UpdateCategoryAsync(AF.Common.DTO.CategoryDTO updateData) {
            return base.Channel.UpdateCategoryAsync(updateData);
        }
        
        public AF.Common.Requests.SingleItemResponse<AF.Common.DTO.CategoryDTO> GetCategory(int id) {
            return base.Channel.GetCategory(id);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.CategoryDTO>> GetCategoryAsync(int id) {
            return base.Channel.GetCategoryAsync(id);
        }
        
        public AF.Common.Requests.ListResponse<AF.Common.DTO.CategoryDTO> GetAllCategories() {
            return base.Channel.GetAllCategories();
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.ListResponse<AF.Common.DTO.CategoryDTO>> GetAllCategoriesAsync() {
            return base.Channel.GetAllCategoriesAsync();
        }
        
        public AF.Common.Requests.SingleItemResponse<AF.Common.DTO.FestivalDTO> AddFestival(AF.Common.DTO.FestivalDTO newFestival) {
            return base.Channel.AddFestival(newFestival);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.FestivalDTO>> AddFestivalAsync(AF.Common.DTO.FestivalDTO newFestival) {
            return base.Channel.AddFestivalAsync(newFestival);
        }
        
        public AF.Common.Requests.SingleItemResponse<AF.Common.DTO.FestivalDTO> UpdateFestival(AF.Common.DTO.FestivalDTO updateData) {
            return base.Channel.UpdateFestival(updateData);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.FestivalDTO>> UpdateFestivalAsync(AF.Common.DTO.FestivalDTO updateData) {
            return base.Channel.UpdateFestivalAsync(updateData);
        }
        
        public AF.Common.Requests.SingleItemResponse<AF.Common.DTO.FestivalDTO> GetFestival(int id) {
            return base.Channel.GetFestival(id);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.FestivalDTO>> GetFestivalAsync(int id) {
            return base.Channel.GetFestivalAsync(id);
        }
        
        public AF.Common.Requests.ListResponse<AF.Common.DTO.FestivalDTO> GetFestivalsPaged(int pageNr, int pageAmount) {
            return base.Channel.GetFestivalsPaged(pageNr, pageAmount);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.ListResponse<AF.Common.DTO.FestivalDTO>> GetFestivalsPagedAsync(int pageNr, int pageAmount) {
            return base.Channel.GetFestivalsPagedAsync(pageNr, pageAmount);
        }
        
        public AF.Common.Requests.SingleItemResponse<int> CountFestivals() {
            return base.Channel.CountFestivals();
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<int>> CountFestivalsAsync() {
            return base.Channel.CountFestivalsAsync();
        }
        
        public AF.Common.Requests.SingleItemResponse<AF.Common.DTO.JobDTO> AddJob(AF.Common.DTO.JobDTO newJob) {
            return base.Channel.AddJob(newJob);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.JobDTO>> AddJobAsync(AF.Common.DTO.JobDTO newJob) {
            return base.Channel.AddJobAsync(newJob);
        }
        
        public AF.Common.Requests.SingleItemResponse<AF.Common.DTO.JobDTO> UpdateJob(AF.Common.DTO.JobDTO updateData) {
            return base.Channel.UpdateJob(updateData);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.JobDTO>> UpdateJobAsync(AF.Common.DTO.JobDTO updateData) {
            return base.Channel.UpdateJobAsync(updateData);
        }
        
        public AF.Common.Requests.SingleItemResponse<AF.Common.DTO.JobDTO> GetJob(int id) {
            return base.Channel.GetJob(id);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.JobDTO>> GetJobAsync(int id) {
            return base.Channel.GetJobAsync(id);
        }
        
        public AF.Common.Requests.ListResponse<AF.Common.DTO.JobDTO> GetAllJobs() {
            return base.Channel.GetAllJobs();
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.ListResponse<AF.Common.DTO.JobDTO>> GetAllJobsAsync() {
            return base.Channel.GetAllJobsAsync();
        }
        
        public AF.Common.Requests.SingleItemResponse<AF.Common.DTO.PlayDataDTO> AddPlay(AF.Common.DTO.PlayDataDTO newPlay) {
            return base.Channel.AddPlay(newPlay);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.PlayDataDTO>> AddPlayAsync(AF.Common.DTO.PlayDataDTO newPlay) {
            return base.Channel.AddPlayAsync(newPlay);
        }
        
        public AF.Common.Requests.SingleItemResponse<AF.Common.DTO.PlayDataDTO> UpdatePlay(AF.Common.DTO.PlayDataDTO updateData) {
            return base.Channel.UpdatePlay(updateData);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.PlayDataDTO>> UpdatePlayAsync(AF.Common.DTO.PlayDataDTO updateData) {
            return base.Channel.UpdatePlayAsync(updateData);
        }
        
        public AF.Common.Requests.SingleItemResponse<AF.Common.DTO.PlayDataDTO> GetPlay(int id) {
            return base.Channel.GetPlay(id);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.PlayDataDTO>> GetPlayAsync(int id) {
            return base.Channel.GetPlayAsync(id);
        }
        
        public AF.Common.Requests.ListResponse<AF.Common.DTO.PlayDataDTO> SearchPlays(AF.Common.Queries.PlaysSearchingCriteria criteria, int pageNr, int pageAmount) {
            return base.Channel.SearchPlays(criteria, pageNr, pageAmount);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.ListResponse<AF.Common.DTO.PlayDataDTO>> SearchPlaysAsync(AF.Common.Queries.PlaysSearchingCriteria criteria, int pageNr, int pageAmount) {
            return base.Channel.SearchPlaysAsync(criteria, pageNr, pageAmount);
        }
        
        public AF.Common.Requests.SingleItemResponse<AF.Common.DTO.PositionDTO> AddPosition(AF.Common.DTO.PositionDTO newPosition) {
            return base.Channel.AddPosition(newPosition);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.PositionDTO>> AddPositionAsync(AF.Common.DTO.PositionDTO newPosition) {
            return base.Channel.AddPositionAsync(newPosition);
        }
        
        public AF.Common.Requests.SingleItemResponse<AF.Common.DTO.PositionDTO> UpdatePosition(AF.Common.DTO.PositionDTO updateData) {
            return base.Channel.UpdatePosition(updateData);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.PositionDTO>> UpdatePositionAsync(AF.Common.DTO.PositionDTO updateData) {
            return base.Channel.UpdatePositionAsync(updateData);
        }
        
        public AF.Common.Requests.SingleItemResponse<AF.Common.DTO.PositionDTO> GetPosition(int id) {
            return base.Channel.GetPosition(id);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.PositionDTO>> GetPositionAsync(int id) {
            return base.Channel.GetPositionAsync(id);
        }
        
        public AF.Common.Requests.ListResponse<AF.Common.DTO.PositionDTO> GetAllPositions() {
            return base.Channel.GetAllPositions();
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.ListResponse<AF.Common.DTO.PositionDTO>> GetAllPositionsAsync() {
            return base.Channel.GetAllPositionsAsync();
        }
        
        public AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationFestivalPersonPositionDTO> AddRelationFestivalPersonPosition(AF.Common.DTO.RelationFestivalPersonPositionDTO newRelationFestivalPersonPosition) {
            return base.Channel.AddRelationFestivalPersonPosition(newRelationFestivalPersonPosition);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationFestivalPersonPositionDTO>> AddRelationFestivalPersonPositionAsync(AF.Common.DTO.RelationFestivalPersonPositionDTO newRelationFestivalPersonPosition) {
            return base.Channel.AddRelationFestivalPersonPositionAsync(newRelationFestivalPersonPosition);
        }
        
        public AF.Common.Requests.SingleItemResponse<bool> RemoveRelationFestivalPersonPosition(int id) {
            return base.Channel.RemoveRelationFestivalPersonPosition(id);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<bool>> RemoveRelationFestivalPersonPositionAsync(int id) {
            return base.Channel.RemoveRelationFestivalPersonPositionAsync(id);
        }
        
        public AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationFestivalPersonPositionDTO> UpdateRelationFestivalPersonPosition(AF.Common.DTO.RelationFestivalPersonPositionDTO updateData) {
            return base.Channel.UpdateRelationFestivalPersonPosition(updateData);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationFestivalPersonPositionDTO>> UpdateRelationFestivalPersonPositionAsync(AF.Common.DTO.RelationFestivalPersonPositionDTO updateData) {
            return base.Channel.UpdateRelationFestivalPersonPositionAsync(updateData);
        }
        
        public AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationFestivalPersonPositionDTO> GetRelationFestivalPersonPosition(int id) {
            return base.Channel.GetRelationFestivalPersonPosition(id);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationFestivalPersonPositionDTO>> GetRelationFestivalPersonPositionAsync(int id) {
            return base.Channel.GetRelationFestivalPersonPositionAsync(id);
        }
        
        public AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonAwardDTO> AddRelationPersonAward(AF.Common.DTO.RelationPersonAwardDTO newRelationPersonAward) {
            return base.Channel.AddRelationPersonAward(newRelationPersonAward);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonAwardDTO>> AddRelationPersonAwardAsync(AF.Common.DTO.RelationPersonAwardDTO newRelationPersonAward) {
            return base.Channel.AddRelationPersonAwardAsync(newRelationPersonAward);
        }
        
        public AF.Common.Requests.SingleItemResponse<bool> RemoveRelationPersonAward(int id) {
            return base.Channel.RemoveRelationPersonAward(id);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<bool>> RemoveRelationPersonAwardAsync(int id) {
            return base.Channel.RemoveRelationPersonAwardAsync(id);
        }
        
        public AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonAwardDTO> UpdateRelationPersonAward(AF.Common.DTO.RelationPersonAwardDTO updateData) {
            return base.Channel.UpdateRelationPersonAward(updateData);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonAwardDTO>> UpdateRelationPersonAwardAsync(AF.Common.DTO.RelationPersonAwardDTO updateData) {
            return base.Channel.UpdateRelationPersonAwardAsync(updateData);
        }
        
        public AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonAwardDTO> GetRelationPersonAward(int id) {
            return base.Channel.GetRelationPersonAward(id);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonAwardDTO>> GetRelationPersonAwardAsync(int id) {
            return base.Channel.GetRelationPersonAwardAsync(id);
        }
        
        public AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonPlayJobDTO> AddRelationPersonPlayJob(AF.Common.DTO.RelationPersonPlayJobDTO newRelationPersonPlayJob) {
            return base.Channel.AddRelationPersonPlayJob(newRelationPersonPlayJob);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonPlayJobDTO>> AddRelationPersonPlayJobAsync(AF.Common.DTO.RelationPersonPlayJobDTO newRelationPersonPlayJob) {
            return base.Channel.AddRelationPersonPlayJobAsync(newRelationPersonPlayJob);
        }
        
        public AF.Common.Requests.SingleItemResponse<bool> RemoveRelationPersonPlayJob(int id) {
            return base.Channel.RemoveRelationPersonPlayJob(id);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<bool>> RemoveRelationPersonPlayJobAsync(int id) {
            return base.Channel.RemoveRelationPersonPlayJobAsync(id);
        }
        
        public AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonPlayJobDTO> UpdateRelationPersonPlayJob(AF.Common.DTO.RelationPersonPlayJobDTO updateData) {
            return base.Channel.UpdateRelationPersonPlayJob(updateData);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonPlayJobDTO>> UpdateRelationPersonPlayJobAsync(AF.Common.DTO.RelationPersonPlayJobDTO updateData) {
            return base.Channel.UpdateRelationPersonPlayJobAsync(updateData);
        }
        
        public AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonPlayJobDTO> GetRelationPersonPlayJob(int id) {
            return base.Channel.GetRelationPersonPlayJob(id);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonPlayJobDTO>> GetRelationPersonPlayJobAsync(int id) {
            return base.Channel.GetRelationPersonPlayJobAsync(id);
        }
        
        public AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonPlayRoleDTO> AddRelationPersonPlayRole(AF.Common.DTO.RelationPersonPlayRoleDTO newRelationPersonPlayRole) {
            return base.Channel.AddRelationPersonPlayRole(newRelationPersonPlayRole);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonPlayRoleDTO>> AddRelationPersonPlayRoleAsync(AF.Common.DTO.RelationPersonPlayRoleDTO newRelationPersonPlayRole) {
            return base.Channel.AddRelationPersonPlayRoleAsync(newRelationPersonPlayRole);
        }
        
        public AF.Common.Requests.SingleItemResponse<bool> RemoveRelationPersonPlayRole(int id) {
            return base.Channel.RemoveRelationPersonPlayRole(id);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<bool>> RemoveRelationPersonPlayRoleAsync(int id) {
            return base.Channel.RemoveRelationPersonPlayRoleAsync(id);
        }
        
        public AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonPlayRoleDTO> UpdateRelationPersonPlayRole(AF.Common.DTO.RelationPersonPlayRoleDTO updateData) {
            return base.Channel.UpdateRelationPersonPlayRole(updateData);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonPlayRoleDTO>> UpdateRelationPersonPlayRoleAsync(AF.Common.DTO.RelationPersonPlayRoleDTO updateData) {
            return base.Channel.UpdateRelationPersonPlayRoleAsync(updateData);
        }
        
        public AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonPlayRoleDTO> GetRelationPersonPlayRole(int id) {
            return base.Channel.GetRelationPersonPlayRole(id);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.RelationPersonPlayRoleDTO>> GetRelationPersonPlayRoleAsync(int id) {
            return base.Channel.GetRelationPersonPlayRoleAsync(id);
        }
        
        public AF.Common.Requests.SingleItemResponse<AF.Common.DTO.UserDTO> GetUser(int id) {
            return base.Channel.GetUser(id);
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.SingleItemResponse<AF.Common.DTO.UserDTO>> GetUserAsync(int id) {
            return base.Channel.GetUserAsync(id);
        }
        
        public AF.Common.Requests.ListResponse<AF.Common.DTO.UserDTO> GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<AF.Common.Requests.ListResponse<AF.Common.DTO.UserDTO>> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
    }
}
